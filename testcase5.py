

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aSwAz5y_Bd33S-h5DW6Zwlk_DpuvmQp0
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

filepath = "C:\\Users\\vaishu\\Desktop\\Dataset\\Boston_housing.csv"
data = pd.read_csv(filepath)

data.info()

data.head()

data.zn.replace(0, np.nan, inplace=True)
data.chas.replace(0, np.nan, inplace=True)

data.info()

data.isnull().sum()/len(data)*100

data = data.drop("zn", 1)
data = data.drop("chas", 1)

data.isnull().sum()/len(data)*100

data.describe()

data.hist(bins=50, figsize=(15, 15))

sns.set(rc={'figure.figsize':(11.7,8.27)})
sns.heatmap(data.corr().round(2), square=True, cmap='RdYlGn', annot=True)

X = data.drop(["medv","rad","tax","dis","age"], 1).values
y= data["medv"].values

plt.figure(figsize=(20, 15))
features = ['crim','indus','nox','rm','ptratio','b','lstat']
target = data['medv']
for i, col in enumerate(features):
    plt.subplot(3, len(features)/2 , i+1)
    x = data[col]
    y = target
    plt.scatter(x, y, marker='o')
    plt.title(col)
    plt.xlabel(col)
    plt.ylabel('MEDV')

print(X.shape)
print(y.shape)
(506, 7)
(506,)

X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.3, random_state=42)
print(len(X_train), "train set + ", len(X_test), "test set")
Output-
354 train set +  152 test set

print(X_train.shape)
print(y_train.shape)
print(X_test.shape)
print(y_test.shape)
(354, 7)
(354,)
(152, 7)
(152,)

lr = LinearRegression()
lr.fit(X_train, y_train)
y_pred = lr.predict(X_test)

r2 = lr.score(X_test, y_test)
rmse = (np.sqrt(mean_squared_error(y_test, y_pred)))
print("The model performance is")
print("--------------------------------------")
print('R2 score is {}'.format(r2))
print('RMSE is {}'.format(rmse))
print("\n")

plt.scatter(y_test, y_pred)
plt.show()